name: CI

on:
  push:
    branches:
      - develop
  workflow_dispatch:
  pull_request:
    branches:
      - main
      - develop

# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when there is a push to the main branch.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Create and configure a Workload Identity Provider for GitHub (https://github.com/google-github-actions/auth#setting-up-workload-identity-federation)
#
# 3. Change the values for the GAR_LOCATION, GKE_ZONE, GKE_CLUSTER, IMAGE, REPOSITORY and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke-kustomize


env:
  PROJECT_ID: bizaifacts #${{ secrets.GCP_PROJECT }}
  GAR_LOCATION: australia-southeast1 # TODO: update region of the Artifact Registry
  REPOSITORY: gcr.io # TODO: update to Artifact Registry docker repository
  IMAGE: cald

permissions:
    contents: 'read'
    id-token: 'write'

jobs:
  setup-build-test:
    name: CI
    runs-on: ubuntu-latest
#    environment: staging

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Build
      run: |-
        docker build \
          --tag "$REPOSITORY/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .
    - name: Run Tests
      run: |-
        docker run "$REPOSITORY/$IMAGE:$GITHUB_SHA" bash run_test.sh
